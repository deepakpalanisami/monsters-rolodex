{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monsters","id","name","email","CardList","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","monster","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,MAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBACIC,IAAI,WACJC,IAAG,+BAA0BH,EAAMI,SAASC,GAAzC,4BAEP,mCAAML,EAAMI,SAASE,KAArB,OACA,kCAAKN,EAAMI,SAASG,MAApB,YCJKC,G,MAAW,SAAAR,GACpB,OAAO,qBAAKC,UAAY,YAAjB,SAEHD,EAAMI,SAASK,KAAI,SAAAL,GAAQ,OACvB,cAAC,EAAD,CAAwBA,SAAUA,GAAvBA,EAASC,WCNnBK,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACIX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCiCHG,G,wDAlCb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXZ,SAAU,GACVa,YAAa,IALH,E,gEAUO,IAAD,OAClBC,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEnB,SAAUkB,S,+BAGlC,IAAD,SAC4BE,KAAKR,MAA/BZ,EADF,EACEA,SAAUa,EADZ,EACYA,YACbQ,EAAmBrB,EAASsB,QAAO,SAAAC,GAAO,OAC9CA,EAAQrB,KAAKsB,cAAcC,SAASZ,EAAYW,kBAElD,OACE,sBAAK3B,UAAU,MAAf,UACE,oDACA,cAAC,EAAD,CACEU,YAAY,kBACZC,aAAc,SAAAkB,GAAC,OAAI,EAAKP,SAAS,CAAEN,YAAaa,EAAEC,OAAOC,WAE3D,cAAC,EAAD,CAAU5B,SAAUqB,W,GA7BVQ,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.924ae282.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = props => (\r\n    <div className='card-container'>\r\n        <img \r\n            alt=\"monsters\" \r\n            src={`https://robohash.org/${props.monsters.id}?set=set2&size=180x180`}\r\n        />\r\n        <h2> {props.monsters.name} </h2>\r\n        <p> {props.monsters.email} </p>\r\n    </div>\r\n)","import React from 'react';\r\n\r\nimport { Card } from '../card/card.component';\r\n\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = props => {\r\n    return <div className = 'card-list'>\r\n        {\r\n        props.monsters.map(monsters => ( \r\n            <Card key={monsters.id} monsters={monsters} /> )\r\n        )}\r\n    </div>;\r\n};\r\n","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input \r\n        className='search'\r\n        type='search' \r\n        placeholder={placeholder} \r\n        onChange={handleChange}>\r\n    </input>\r\n)\r\n","import React, { Component } from 'react';\n\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from './components/search-box/search-box.component';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n     .then(response => response.json())\n     .then(users => this.setState({ monsters: users}));\n  }\n\n  render() {\n    const  { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())  \n      )\n    return (\n      <div className=\"App\"> \n        <h1> Monsters Rolodex </h1>\n        <SearchBox\n          placeholder='Search Monsters'\n          handleChange={e => this.setState({ searchField: e.target.value})}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}